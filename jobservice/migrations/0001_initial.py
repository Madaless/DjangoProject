# Generated by Django 2.2 on 2019-05-19 13:51

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_person', models.BooleanField(default=False)),
                ('is_company', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameCv', models.CharField(max_length=50)),
                ('lastName', models.CharField(max_length=50)),
                ('firstName', models.CharField(max_length=50)),
                ('dateOfBirth', models.CharField(max_length=50)),
                ('education', models.CharField(blank=True, max_length=300)),
                ('placeOfResidence', models.CharField(max_length=300)),
                ('experience', models.CharField(blank=True, max_length=300)),
                ('description', models.CharField(blank=True, max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='JobOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=50)),
                ('trade', models.CharField(default='', max_length=50)),
                ('proffesion', models.CharField(default='', max_length=50)),
                ('jobPosition', models.CharField(default='', max_length=50)),
                ('postdate', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(default='', max_length=300)),
                ('additionalSkills', models.CharField(default='', max_length=300)),
                ('additionalInfo', models.CharField(default='', max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('companyName', models.CharField(default='', max_length=50)),
                ('companyMail', models.EmailField(default='', max_length=254)),
                ('image', models.ImageField(default='default.jpg', upload_to='pics')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('user', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('userName', models.CharField(default='', max_length=10)),
                ('personMail', models.EmailField(default='', max_length=254)),
                ('image', models.ImageField(default='default.jpg', upload_to='pics')),
                ('creationdate', models.DateTimeField(auto_now_add=True)),
                ('lastName', models.CharField(max_length=50)),
                ('firstName', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ReplyToOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateAdd', models.DateTimeField(auto_now_add=True)),
                ('messForCompany', models.CharField(default='', max_length=150)),
                ('cv', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='jobservice.Cv')),
                ('idOffer', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='jobservice.JobOffer')),
                ('idPerson', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='jobservice.Person')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accept', models.BooleanField(default='', max_length=50)),
                ('response', models.CharField(default='', max_length=50)),
                ('idReplyToOffer', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='jobservice.ReplyToOffer')),
            ],
        ),
        migrations.AddField(
            model_name='joboffer',
            name='companyName',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobservice.Company'),
        ),
        migrations.AddField(
            model_name='cv',
            name='userName',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jobservice.Person'),
        ),
    ]
